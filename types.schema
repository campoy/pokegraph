type ability {
	pokemon: [uid]
	effect_changes: [uid]
	effect_entries: [uid]
	generation: [uid]
	is_main_series: bool
	name: string
	url: string
	id: int
	flavor_text_entries: [uid]
}

type berry {
	flavors: [uid]
	growth_time: int
	item: [uid]
	max_harvest: int
	name: string
	natural_gift_type: [uid]
	size: int
	firmness: [uid]
	smoothness: int
	soil_dryness: int
	id: int
	natural_gift_power: int
	url: string
}

type berry-firmness {
	name: string
	url: string
	berries: [uid]
	id: int
}

type berry-flavor {
	id: int
	name: string
	url: string
	berries: [uid]
	contest_type: [uid]
}

type characteristic {
	descriptions: [uid]
	gene_modulo: int
	highest_stat: [uid]
	id: int
	possible_values: int
	url: string
}

type contest-effect {
	id: int
	jam: int
	url: string
	appeal: int
	effect_entries: [uid]
	flavor_text_entries: [uid]
}

type contest-type {
	berry_flavor: [uid]
	id: int
	name: string
	url: string
}

type egg-group {
	id: int
	name: string
	pokemon_species: [uid]
	url: string
}

type encounter-condition {
	id: int
	name: string
	url: string
	values: [uid]
}

type encounter-condition-value {
	id: int
	name: string
	url: string
	condition: [uid]
}

type encounter-method {
	order: int
	url: string
	id: int
	name: string
}

type evolution-chain {
	chain: [uid]
	id: int
	url: string
	baby_trigger_item: [uid]
}

type evolution-trigger {
	name: string
	pokemon_species: [uid]
	url: string
	id: int
}

type gender {
	id: int
	name: string
	pokemon_species_details: [uid]
	url: string
	required_for_evolution: [uid]
}

type generation {
	id: int
	main_region: [uid]
	abilities: [uid]
	moves: [uid]
	name: string
	pokemon_species: [uid]
	url: string
	version_groups: [uid]
	types: [uid]
}

type growth-rate {
	id: int
	levels: [uid]
	name: string
	pokemon_species: [uid]
	url: string
	descriptions: [uid]
	formula: string
}

type item {
	machines: [uid]
	flavor_text_entries: [uid]
	cost: int
	game_indices: [uid]
	id: int
	url: string
	held_by_pokemon: [uid]
	baby_trigger_for: [uid]
	sprites: [uid]
	category: [uid]
	fling_effect: [uid]
	name: string
	attributes: [uid]
	effect_entries: [uid]
	fling_power: int
}

type item-attribute {
	id: int
	items: [uid]
	name: string
	url: string
	descriptions: [uid]
}

type item-category {
	name: string
	pocket: [uid]
	url: string
	id: int
	items: [uid]
}

type item-fling-effect {
	url: string
	effect_entries: [uid]
	id: int
	items: [uid]
	name: string
}

type item-pocket {
	categories: [uid]
	id: int
	name: string
	url: string
}

type language {
	url: string
	id: int
	iso3166: string
	iso639: string
	name: string
	official: bool
}

type location {
	areas: [uid]
	game_indices: [uid]
	id: int
	name: string
	region: [uid]
	url: string
}

type location-area {
	id: int
	location: [uid]
	name: string
	pokemon_encounters: [uid]
	url: string
	encounter_method_rates: [uid]
	game_index: int
}

type machine {
	version_group: [uid]
	id: int
	item: [uid]
	move: [uid]
	url: string
}

type move {
	meta: [uid]
	type: [uid]
	priority: int
	url: string
	id: int
	name: string
	pp: int
	contest_type: [uid]
	effect_entries: [uid]
	contest_combos: [uid]
	machines: [uid]
	flavor_text_entries: [uid]
	target: [uid]
	generation: [uid]
	effect_changes: [uid]
	contest_effect: [uid]
	effect_chance: int
	super_contest_effect: [uid]
	power: int
	stat_changes: [uid]
	accuracy: int
	damage_class: [uid]
	past_values: [uid]
}

type move-ailment {
	name: string
	url: string
	id: int
	moves: [uid]
}

type move-battle-style {
	name: string
	url: string
	id: int
}

type move-category {
	descriptions: [uid]
	id: int
	moves: [uid]
	name: string
	url: string
}

type move-damage-class {
	descriptions: [uid]
	id: int
	moves: [uid]
	name: string
	url: string
}

type move-learn-method {
	descriptions: [uid]
	id: int
	name: string
	url: string
	version_groups: [uid]
}

type move-target {
	id: int
	moves: [uid]
	name: string
	url: string
	descriptions: [uid]
}

type nature {
	name: string
	url: string
	decreased_stat: [uid]
	id: int
	pokeathlon_stat_changes: [uid]
	move_battle_style_preferences: [uid]
	hates_flavor: [uid]
	increased_stat: [uid]
	likes_flavor: [uid]
}

type pal-park-area {
	id: int
	name: string
	pokemon_encounters: [uid]
	url: string
}

type pokeathlon-stat {
	name: string
	url: string
	affecting_natures: [uid]
	id: int
}

type pokedex {
	url: string
	descriptions: [uid]
	id: int
	is_main_series: bool
	name: string
	version_groups: [uid]
	region: [uid]
	pokemon_entries: [uid]
}

type pokemon {
	game_indices: [uid]
	held_items: [uid]
	is_default: bool
	order: int
	abilities: [uid]
	species: [uid]
	height: int
	id: int
	types: [uid]
	moves: [uid]
	base_experience: int
	name: string
	sprites: [uid]
	forms: [uid]
	location_area_encounters: string
	stats: [uid]
	url: string
	weight: int
}

